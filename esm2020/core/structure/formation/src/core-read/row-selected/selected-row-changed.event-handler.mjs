import { SelectedRowChangedEvent } from '../../core/selected-row-changed.event';
import { RowSelectedArchive } from './row-selected.archive';
import { RowSelectedReadModel } from '../../api/row-selected/row-selected.read-model';
export class SelectedRowChangedEventHandler {
    constructor(rowSelectedArchive) {
        this.rowSelectedArchive = rowSelectedArchive;
    }
    forEvent() {
        return SelectedRowChangedEvent;
    }
    handle(rowChangedEvent) {
        if (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {
            const rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());
            this.rowSelectedArchive.next(rowChangedEvent.getAggregateId(), rowSelectedRead);
        }
    }
}
SelectedRowChangedEventHandler.services = [RowSelectedArchive];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0ZWQtcm93LWNoYW5nZWQuZXZlbnQtaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtZ3JpZC9zcmMvY29yZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9jb3JlLXJlYWQvcm93LXNlbGVjdGVkL3NlbGVjdGVkLXJvdy1jaGFuZ2VkLmV2ZW50LWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFHdEYsTUFBTSxPQUFPLDhCQUE4QjtJQUUxQyxZQUE2QixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUNuRSxDQUFDO0lBSUQsUUFBUTtRQUNQLE9BQU8sdUJBQXVCLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxlQUF3QztRQUU5QyxJQUFJLGVBQWUsQ0FBQyxhQUFhLENBQUMseUJBQXlCLENBQUMsRUFBRTtZQUU3RCxNQUFNLGVBQWUsR0FBRyxJQUFJLG9CQUFvQixDQUMvQyxlQUFlLENBQUMsZUFBZSxFQUFFLEVBQ2pDLGVBQWUsQ0FBQyxhQUFhLEVBQUUsRUFDL0IsZUFBZSxDQUFDLGVBQWUsRUFBRSxDQUNqQyxDQUFDO1lBRUYsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxFQUFFLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDaEY7SUFDRixDQUFDOztBQWxCZSx1Q0FBUSxHQUFHLENBQUMsa0JBQWtCLENBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvbWFpbkV2ZW50SGFuZGxlciwgRG9tYWluRXZlbnRUeXBlIH0gZnJvbSAnQGdlbmVyaWMtdWkvaGVybWVzJztcblxuaW1wb3J0IHsgU2VsZWN0ZWRSb3dDaGFuZ2VkRXZlbnQgfSBmcm9tICcuLi8uLi9jb3JlL3NlbGVjdGVkLXJvdy1jaGFuZ2VkLmV2ZW50JztcbmltcG9ydCB7IFJvd1NlbGVjdGVkQXJjaGl2ZSB9IGZyb20gJy4vcm93LXNlbGVjdGVkLmFyY2hpdmUnO1xuaW1wb3J0IHsgU3RydWN0dXJlSWQgfSBmcm9tICcuLi8uLi8uLi8uLi9zdHJ1Y3R1cmUtY29yZS9zcmMvYXBpL2dsb2JhbC9zdHJ1Y3R1cmUuaWQnO1xuaW1wb3J0IHsgUm93U2VsZWN0ZWRSZWFkTW9kZWwgfSBmcm9tICcuLi8uLi9hcGkvcm93LXNlbGVjdGVkL3Jvdy1zZWxlY3RlZC5yZWFkLW1vZGVsJztcblxuXG5leHBvcnQgY2xhc3MgU2VsZWN0ZWRSb3dDaGFuZ2VkRXZlbnRIYW5kbGVyIGltcGxlbWVudHMgRG9tYWluRXZlbnRIYW5kbGVyPFN0cnVjdHVyZUlkLCBTZWxlY3RlZFJvd0NoYW5nZWRFdmVudD4ge1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgcm93U2VsZWN0ZWRBcmNoaXZlOiBSb3dTZWxlY3RlZEFyY2hpdmUpIHtcblx0fVxuXG5cdHN0YXRpYyByZWFkb25seSBzZXJ2aWNlcyA9IFtSb3dTZWxlY3RlZEFyY2hpdmVdIGFzIGNvbnN0O1xuXG5cdGZvckV2ZW50KCk6IERvbWFpbkV2ZW50VHlwZTxTZWxlY3RlZFJvd0NoYW5nZWRFdmVudD4ge1xuXHRcdHJldHVybiBTZWxlY3RlZFJvd0NoYW5nZWRFdmVudDtcblx0fVxuXG5cdGhhbmRsZShyb3dDaGFuZ2VkRXZlbnQ6IFNlbGVjdGVkUm93Q2hhbmdlZEV2ZW50KTogdm9pZCB7XG5cblx0XHRpZiAocm93Q2hhbmdlZEV2ZW50Lm9mTWVzc2FnZVR5cGUoJ1NlbGVjdGVkUm93Q2hhbmdlZEV2ZW50JykpIHtcblxuXHRcdFx0Y29uc3Qgcm93U2VsZWN0ZWRSZWFkID0gbmV3IFJvd1NlbGVjdGVkUmVhZE1vZGVsKFxuXHRcdFx0XHRyb3dDaGFuZ2VkRXZlbnQuZ2V0U2VsZWN0ZWRSb3dzKCksXG5cdFx0XHRcdHJvd0NoYW5nZWRFdmVudC5pc0FsbFNlbGVjdGVkKCksXG5cdFx0XHRcdHJvd0NoYW5nZWRFdmVudC5pc0FsbFVuc2VsZWN0ZWQoKVxuXHRcdFx0KTtcblxuXHRcdFx0dGhpcy5yb3dTZWxlY3RlZEFyY2hpdmUubmV4dChyb3dDaGFuZ2VkRXZlbnQuZ2V0QWdncmVnYXRlSWQoKSwgcm93U2VsZWN0ZWRSZWFkKTtcblx0XHR9XG5cdH1cblxufVxuIl19
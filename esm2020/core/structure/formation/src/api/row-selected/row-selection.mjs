import { GenericBuilder } from '../../../../../../common/src/cdk/generic-builder';
export var RowSelectionType;
(function (RowSelectionType) {
    RowSelectionType[RowSelectionType["ROW"] = 0] = "ROW";
    RowSelectionType[RowSelectionType["CHECKBOX"] = 1] = "CHECKBOX";
    RowSelectionType[RowSelectionType["RADIO"] = 2] = "RADIO";
})(RowSelectionType || (RowSelectionType = {}));
export var RowSelectionMode;
(function (RowSelectionMode) {
    RowSelectionMode[RowSelectionMode["SINGLE"] = 0] = "SINGLE";
    RowSelectionMode[RowSelectionMode["MULTIPLE"] = 1] = "MULTIPLE";
})(RowSelectionMode || (RowSelectionMode = {}));
export class RowSelection {
    constructor(config) {
        if (config?.enabled) {
            this.enabled = config.enabled;
        }
        if (config?.selectedRowIndexes) {
            this.selectedRowIndexes = config.selectedRowIndexes;
        }
        if (config?.selectedRowIds) {
            this.selectedRowIds = config.selectedRowIds;
        }
        if (config?.mode) {
            this.mode = config.mode;
        }
        if (config?.type) {
            this.type = config.type;
        }
        if (config?.matcher) {
            this.matcher = config.matcher;
        }
        if (config?.config) {
            this.customConfig = config.config;
        }
    }
    isModeDefined() {
        return this.mode !== undefined;
    }
    isTypeDefined() {
        return this.type !== undefined;
    }
    isSelectedRowIndexesDefined() {
        return this.selectedRowIndexes !== undefined;
    }
    isSelectedRowIdsDefined() {
        return this.selectedRowIds !== undefined;
    }
    isEnabledDefined() {
        return this.enabled !== undefined;
    }
    isMatcherDefined() {
        return this.matcher !== undefined;
    }
    isEnabled() {
        return this.enabled;
    }
    isCustomSelectConfig() {
        return this.customConfig !== undefined;
    }
    getSelectedRowIndexes() {
        return this.selectedRowIndexes;
    }
    getSelectedRowIds() {
        return this.selectedRowIds;
    }
    getMode() {
        return this.mode;
    }
    getType() {
        return this.type;
    }
    getMatcher() {
        return this.matcher;
    }
    getCustomSelectConfig() {
        return this.customConfig;
    }
}
// eslint-disable-next-line @typescript-eslint/member-ordering
RowSelection.Builder = class RowSelectionBuilder extends GenericBuilder {
    constructor() {
        super();
    }
    buildObject() {
        return new RowSelection({
            enabled: this.enabled,
            selectedRowIndexes: this.selectedRowIndexes,
            selectedRowIds: this.selectedRowIds,
            type: this.type,
            mode: this.mode,
            matcher: this.matcher,
            config: this.config
        });
    }
    withEnabled(enabled) {
        this.enabled = enabled;
        return this;
    }
    withSelectedRowIndexes(indexes) {
        this.selectedRowIndexes = indexes;
        return this;
    }
    withSelectedRowIds(ids) {
        this.selectedRowIds = ids;
        return this;
    }
    withType(type) {
        this.type = type;
        return this;
    }
    withMode(mode) {
        this.mode = mode;
        return this;
    }
    withMatcher(matcher) {
        this.matcher = matcher;
        return this;
    }
    witCustomSelection(config) {
        this.config = config;
        return this;
    }
};
//# sourceMappingURL=data:application/json;base64,